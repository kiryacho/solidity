# vim:syntax=dockerfile
#------------------------------------------------------------------------------
# Dockerfile for building and testing Solidity Compiler on CI
#
# This file is part of solidity.
#
# solidity is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# solidity is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with solidity.  If not, see <http://www.gnu.org/licenses/>
#
# (c) 2016-2019 solidity contributors.
#------------------------------------------------------------------------------
FROM buildpack-deps:trusty
# 18.04: bionic
# 16.04: xenial
# 14.04: trusty

RUN set -ex; \
	apt update; \
	apt install -qqy --no-install-recommends \
		build-essential \
		software-properties-common \
		cmake3 ninja-build \
		; \
	add-apt-repository -y ppa:ubuntu-toolchain-r/test; \
	add-apt-repository -y ppa:mhier/libboost-latest; \
	add-apt-repository -y ppa:ethereum/ethereum; \
	add-apt-repository -y ppa:ethereum/ethereum-dev; \
	apt-get -qy update; \
	apt-get -qy install g++-8 gcc-8; \
	apt-get -qy install libboost1.67-dev; \
	apt-get -qy install libjsoncpp-dev; \
	update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 90; \
	update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 90; \
	apt-get -qy install eth; \
	git clone --depth=1 https://github.com/Z3Prover/z3.git /usr/src/z3; \
	mkdir /usr/src/z3/build; \
	cd /usr/src/z3/build; \
	cmake -DCMAKE_BUILD_TYPE="Release" -DCMAKE_INSTALL_PREFIX="/usr" -G "Ninja" ..; \
	ninja; \
	ninja install; \
	cd /; \
	rm -rf /var/lib/apt/lists/* /usr/src/z3

# install decent CVC4 (for Ubuntu >= 16.04 there is a package, libcvc4-dev)
# ARG CVC4_VER="1.7"
# ARG CVC4_URL="https://github.com/CVC4/CVC4/archive/${CVC4_VER}.tar.gz"
# RUN wget -q -O- "${CVC4_URL}" | tar xzpf - -C /usr/src
# RUN set -ex; \
# 	mkdir /usr/src/CVC4-${CVC4_VER}/build; \
# 	cd /usr/src/CVC4-${CVC4_VER}/build; \
# 	cmake -DCMAKE_BUILD_TYPE="Production" -DCMAKE_INSTALL_PREFIX="/usr" -G "Ninja" ..; \
# 	ninja; \
# 	ninja install; \
# 	cd /; \
# 	rm -rf /usr/src/CVC4-${CVC4_VER};

ARG ALETH_VERSION="1.6.0"
ARG ALETH_URL="https://github.com/ethereum/aleth/releases/download/v${ALETH_VERSION}/aleth-${ALETH_VERSION}-linux-x86_64.tar.gz"
RUN wget -q -O- "${ALETH_URL}" | tar xzvpf - -C /usr
